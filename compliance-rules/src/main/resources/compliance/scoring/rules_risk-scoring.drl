package compliance.scoring

import com.sample.compliance.*;
import java.util.*;
import java.math.BigDecimal;

global Map<String, BigDecimal> riskRatingMap; 

rule "baseRule"
enabled false
ruleflow-group "scoring-raw"
    when
        $execTrace : List ( )
        $case : SampleCase ( $caseId : id )
    then
        ///no consequence to base rule
end

rule "lowAgeCheck" extends "baseRule"
    //@ID("1")
ruleflow-group "scoring-raw"
    when
        SampleCase ( id == $caseId, state == 1, age > 15 && <= 25 )

    then
        BigDecimal _preRate = $case.getRiskRating();
        modify($case) {
            setRiskRating($case.boostRatingByPercent((BigDecimal)riskRatingMap.get("LOW_AGE_SCORE")));
        }
        $execTrace.add(String.format("rule [id: %s, riskRating: [pre: %s, post: %s]]"
            , drools.getRule().getId(), _preRate, $case.getRiskRating()));
end

rule "hasClaims_lowAgeCheck" extends "lowAgeCheck"
ruleflow-group "scoring-raw"
    when
        SampleCase ( id == $caseId, looseAttributes["hasClaims"] == "true" )
    then
        BigDecimal _preRate = $case.getRiskRating();
        modify($case) {
            setRiskRating($case.boostRatingByPercent((BigDecimal)riskRatingMap.get("HAS_PRIOR_CLAIMS_LOW_AGE")));
        }
        $execTrace.add(String.format("rule [id: %s, riskRating: [pre: %s, post: %s]]"
            , drools.getRule().getId(), _preRate, $case.getRiskRating()));
end

rule "mediumAgeCheck" extends "baseRule"
ruleflow-group "scoring-raw"
    when
        SampleCase ( id == $caseId, state == 1, age > 25 && <= 90 )
    then
        BigDecimal _preRate = $case.getRiskRating();
        modify($case) {
            setRiskRating($case.boostRatingByPercent((BigDecimal)riskRatingMap.get("MID_AGE_SCORE")));
        }
        $execTrace.add(String.format("rule [id: %s, riskRating: [pre: %s, post: %s]]"
            , drools.getRule().getId(), _preRate, $case.getRiskRating()));
end

rule "hasClaims_mediumAgeCheck" extends "mediumAgeCheck"
ruleflow-group "scoring-raw"
    when
        SampleCase ( id == $caseId, looseAttributes["hasClaims"] == true )
    then
        BigDecimal _preRate = $case.getRiskRating();
        modify($case) {
            setRiskRating($case.boostRatingByPercent((BigDecimal)riskRatingMap.get("HAS_PRIOR_CLAIMS_MID_AGE")));
        }
        $execTrace.add(String.format("rule [id: %s, riskRating: [pre: %s, post: %s]]"
            , drools.getRule().getId(), _preRate, $case.getRiskRating()));
end

rule "ownsMachete_mediumAgeCheck" extends "mediumAgeCheck"
salience 100
ruleflow-group "scoring-raw"
    when
        SampleCase ( id == $caseId, looseAttributes["ownsMachete"] == true )
    then
        BigDecimal _preRate = $case.getRiskRating();
        
        $case.setRiskRating(new BigDecimal("1"));
        retract($case);
        $execTrace.add(String.format("CODE RED: rule [id: %s, riskRating: [rating pre-termination: %s]]"
            , drools.getRule().getId(), _preRate));
end

rule "highAgeCheck"
ruleflow-group "scoring-raw"
    when
        $execTrace : List ( )
        $case : SampleCase ( age > 90 )
    then
        BigDecimal _preRate = $case.getRiskRating();
        modify($case) {
            setRiskRating($case.boostRatingByPercent((BigDecimal)riskRatingMap.get("HIGH_AGE_SCORE")));
        }
        $execTrace.add(String.format("rule [id: %s, riskRating: [pre: %s, post: %s]]"
            , drools.getRule().getId(), _preRate, $case.getRiskRating()));
end

rule "greenTrafficLight"
ruleflow-group "scoring-trafficlight"
    when
        $execTrace : List ( )
        $case : SampleCase ( riskRating < .4 )
    then
        $case.setTrafficLight(TrafficLight.GREEN);
        update($case);
        $execTrace.add(String.format("rule [id: %s, trafficLight: %s]"
            , drools.getRule().getId(), $case.getTrafficLight()));
end

rule "amberTrafficLight"
ruleflow-group "scoring-trafficlight"
    when
        $execTrace : List ( )
        $case : SampleCase ( riskRating >= .4 && < .8 )
    then
        $case.setTrafficLight(TrafficLight.AMBER);
        update($case);
        $execTrace.add(String.format("rule [id: %s, trafficLight: %s]"
            , drools.getRule().getId(), $case.getTrafficLight()));
end

rule "redTrafficLight"
ruleflow-group "scoring-trafficlight"
    when
        $execTrace : List ( )
        $case : SampleCase ( riskRating >= .8 )
    then
        $case.setTrafficLight(TrafficLight.RED);
        update($case);
        $execTrace.add(String.format("rule [id: %s, trafficLight: %s]"
            , drools.getRule().getId(), $case.getTrafficLight()));
end
